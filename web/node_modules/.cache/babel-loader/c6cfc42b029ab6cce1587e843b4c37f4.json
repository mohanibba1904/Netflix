{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nagababu\\\\Documents\\\\GitHub\\\\Netflix\\\\web\\\\src\\\\components\\\\VideoListItem\\\\index.js\";\nimport { Link } from 'react-router-dom';\nimport { BsDot } from 'react-icons/bs';\nimport { format, formatDistanceToNow } from 'date-fns';\nimport { CgPlayListAdd } from 'react-icons/cg';\nimport Context from '../../Context/Context';\nimport './index.css';\nimport { VideoListItem, VideoListItemContainer, VideoListItemThumbnailContainer, VideoListItemThumbnailImage, VideoListItemContentContainer, VideoListItemContentProfileContainer, VideoListItemContentProfileImage, VideoListItemContentItemsContainer, VideoListItemContentItemsHeading, VideoListItemChannelName, VideoListItemViewsTimeContainerSmall, VideoListItemViewsTimeContainerLarge, VideoItemDetailsSmallButton, VideoListItemContainerItemText } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onClickSaveOrDeleteButton = () => {\n  saveOrDeleteVideo(videoDetails);\n};\n\nconst VideoItemCard = props => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n  children: value => {\n    const {\n      isLightThemeActive,\n      savedVideosList\n    } = value;\n    const {\n      videoItem\n    } = props;\n    const formattedDate = format(new Date(videoItem.publishedAt), 'yyyy, MM, dd');\n    const activeButtonColor = '#2563eb';\n    const inActiveButtonColor = ' #64748b';\n    const newDate = new Date(formattedDate);\n    const publishedTimeAgo = formatDistanceToNow(newDate);\n    const alreadySavedVideos = savedVideosList.filter(eachItem => eachItem.id === videoDetails.id);\n    const isThisVideoSaved = alreadySavedVideos.length !== 0;\n    const headTextColor = isLightThemeActive ? '#313131' : '#f9f9f9';\n    const textColor = isLightThemeActive ? '#424242' : '#7e858e';\n    return /*#__PURE__*/_jsxDEV(Link, {\n      className: \"link-style\",\n      to: `videos/${videoItem.id}`,\n      children: /*#__PURE__*/_jsxDEV(VideoListItem, {\n        children: /*#__PURE__*/_jsxDEV(VideoListItemContainer, {\n          children: [/*#__PURE__*/_jsxDEV(VideoListItemThumbnailContainer, {\n            children: /*#__PURE__*/_jsxDEV(VideoListItemThumbnailImage, {\n              src: videoItem.thumbnailUrl,\n              alt: \"video thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoListItemContentContainer, {\n            children: [/*#__PURE__*/_jsxDEV(VideoListItemContentProfileContainer, {\n              children: /*#__PURE__*/_jsxDEV(VideoListItemContentProfileImage, {\n                src: videoItem.profileImageUrl,\n                alt: \"channel logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(VideoListItemContentItemsContainer, {\n              children: [/*#__PURE__*/_jsxDEV(VideoListItemContentItemsHeading, {\n                color: headTextColor,\n                children: videoItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(VideoListItemChannelName, {\n                color: textColor,\n                children: videoItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(VideoListItemViewsTimeContainerLarge, {\n                children: [/*#__PURE__*/_jsxDEV(VideoListItemContainerItemText, {\n                  color: textColor,\n                  children: `${videoItem.viewCount} views`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(BsDot, {\n                  size: \"22\",\n                  color: textColor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(VideoListItemContainerItemText, {\n                  color: textColor,\n                  children: publishedTimeAgo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(VideoItemDetailsSmallButton, {\n                  type: \"button\",\n                  onClick: onClickSaveOrDeleteButton,\n                  color: isThisVideoSaved ? activeButtonColor : inActiveButtonColor,\n                  children: [/*#__PURE__*/_jsxDEV(CgPlayListAdd, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, this), isThisVideoSaved ? 'Saved' : 'Save']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\n_c = VideoItemCard;\nexport default VideoItemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItemCard\");","map":{"version":3,"sources":["C:/Users/Nagababu/Documents/GitHub/Netflix/web/src/components/VideoListItem/index.js"],"names":["Link","BsDot","format","formatDistanceToNow","CgPlayListAdd","Context","VideoListItem","VideoListItemContainer","VideoListItemThumbnailContainer","VideoListItemThumbnailImage","VideoListItemContentContainer","VideoListItemContentProfileContainer","VideoListItemContentProfileImage","VideoListItemContentItemsContainer","VideoListItemContentItemsHeading","VideoListItemChannelName","VideoListItemViewsTimeContainerSmall","VideoListItemViewsTimeContainerLarge","VideoItemDetailsSmallButton","VideoListItemContainerItemText","onClickSaveOrDeleteButton","saveOrDeleteVideo","videoDetails","VideoItemCard","props","value","isLightThemeActive","savedVideosList","videoItem","formattedDate","Date","publishedAt","activeButtonColor","inActiveButtonColor","newDate","publishedTimeAgo","alreadySavedVideos","filter","eachItem","id","isThisVideoSaved","length","headTextColor","textColor","thumbnailUrl","profileImageUrl","title","name","viewCount"],"mappings":"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","sourcesContent":["import {Link} from 'react-router-dom'\r\n\r\nimport {BsDot} from 'react-icons/bs'\r\nimport {format, formatDistanceToNow} from 'date-fns'\r\nimport {CgPlayListAdd} from 'react-icons/cg'\r\n\r\nimport Context from '../../Context/Context'\r\n\r\nimport './index.css'\r\nimport {\r\n  VideoListItem,\r\n  VideoListItemContainer,\r\n  VideoListItemThumbnailContainer,\r\n  VideoListItemThumbnailImage,\r\n  VideoListItemContentContainer,\r\n  VideoListItemContentProfileContainer,\r\n  VideoListItemContentProfileImage,\r\n  VideoListItemContentItemsContainer,\r\n  VideoListItemContentItemsHeading,\r\n  VideoListItemChannelName,\r\n  VideoListItemViewsTimeContainerSmall,\r\n  VideoListItemViewsTimeContainerLarge,\r\n  VideoItemDetailsSmallButton,\r\n  VideoListItemContainerItemText,\r\n} from './styledComponents'\r\n\r\n\r\nconst onClickSaveOrDeleteButton = () => {\r\n  saveOrDeleteVideo(videoDetails)\r\n}\r\n\r\nconst VideoItemCard = props => (\r\n  <Context.Consumer>\r\n    {value => {\r\n      const {isLightThemeActive,savedVideosList} = value\r\n      const {videoItem} = props\r\n      const formattedDate = format(\r\n        new Date(videoItem.publishedAt),\r\n        'yyyy, MM, dd',\r\n        \r\n      )\r\n      const activeButtonColor = '#2563eb'\r\n      const inActiveButtonColor = ' #64748b'\r\n      const newDate = new Date(formattedDate)\r\n      const publishedTimeAgo = formatDistanceToNow(newDate)\r\n\r\n      const alreadySavedVideos = savedVideosList.filter(\r\n        eachItem => eachItem.id === videoDetails.id,\r\n      )\r\n      const isThisVideoSaved = alreadySavedVideos.length !== 0\r\n\r\n      const headTextColor = isLightThemeActive ? '#313131' : '#f9f9f9'\r\n      const textColor = isLightThemeActive ? '#424242' : '#7e858e'\r\n      return (\r\n        <Link className=\"link-style\" to={`videos/${videoItem.id}`}>\r\n          <VideoListItem>\r\n            <VideoListItemContainer>\r\n              <VideoListItemThumbnailContainer>\r\n                <VideoListItemThumbnailImage\r\n                  src={videoItem.thumbnailUrl}\r\n                  alt=\"video thumbnail\"\r\n                />\r\n              </VideoListItemThumbnailContainer>\r\n              <VideoListItemContentContainer>\r\n                <VideoListItemContentProfileContainer>\r\n                  <VideoListItemContentProfileImage\r\n                    src={videoItem.profileImageUrl}\r\n                    alt=\"channel logo\"\r\n                  />\r\n                </VideoListItemContentProfileContainer>\r\n                <VideoListItemContentItemsContainer>\r\n                  <VideoListItemContentItemsHeading color={headTextColor}>\r\n                    {videoItem.title}\r\n                  </VideoListItemContentItemsHeading>\r\n                  <VideoListItemChannelName color={textColor}>\r\n                    {videoItem.name}\r\n                  </VideoListItemChannelName>\r\n                  <VideoListItemViewsTimeContainerLarge>\r\n                    <VideoListItemContainerItemText\r\n                      color={textColor}\r\n                    >{`${videoItem.viewCount} views`}</VideoListItemContainerItemText>\r\n                    <BsDot size=\"22\" color={textColor} />\r\n                    <VideoListItemContainerItemText color={textColor}>\r\n                      {publishedTimeAgo}\r\n                    </VideoListItemContainerItemText>\r\n                    <VideoItemDetailsSmallButton\r\n                  type=\"button\"\r\n                  onClick={onClickSaveOrDeleteButton}\r\n                  color={\r\n                    isThisVideoSaved ? activeButtonColor : inActiveButtonColor\r\n                  }\r\n                >\r\n                  <CgPlayListAdd />\r\n                  {isThisVideoSaved ? 'Saved' : 'Save'}\r\n                </VideoItemDetailsSmallButton>\r\n                  </VideoListItemViewsTimeContainerLarge>\r\n                </VideoListItemContentItemsContainer>\r\n              </VideoListItemContentContainer>\r\n            </VideoListItemContainer>\r\n          </VideoListItem>\r\n        </Link>\r\n      )\r\n    }}\r\n  </Context.Consumer>\r\n)\r\n\r\nexport default VideoItemCard\r\n"]},"metadata":{},"sourceType":"module"}