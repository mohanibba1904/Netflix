{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nagababu\\\\Documents\\\\GitHub\\\\Netflix\\\\web\\\\src\\\\components\\\\Trending\\\\index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { HiFire } from 'react-icons/hi';\nimport Header from '../Header';\nimport SidebarSection from '../SidebarContainer';\nimport VideoListItemTrending from '../VideoListItemTrending';\nimport Context from '../../Context/Context';\nimport './index.css';\nimport { HomeContainer, HomeBarsContainer, MainContainer, BannerContainer, BannerIconHeadingContainer, BannerHeading, VideosList, FailureViewContainer, FailureViewImage, FailureHeading, FailureText, FailureRetryButton, NoVideosViewContainer, NoVideosViewImage, NoVideosHeading, NoVideosText, NoVideosViewRetryButton } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass Trending extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiStatus: apiConstants.initial,\n      videosList: []\n    };\n\n    this.getVideosData = async () => {\n      this.setState({\n        apiStatus: apiConstants.inProgress\n      });\n      const JwtToken = Cookies.get('jwt_token');\n      const videosListUrl = `https://apis.ccbp.in/videos/trending`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${JwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(videosListUrl, options);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        const formattedData = responseData.videos.map(eachItem => ({\n          channel: {\n            name: eachItem.channel.name,\n            profileImageUrl: eachItem.channel.profile_image_url\n          },\n          id: eachItem.id,\n          publishedAt: eachItem.published_at,\n          thumbnailUrl: eachItem.thumbnail_url,\n          title: eachItem.title,\n          viewCount: eachItem.view_count\n        }));\n        this.setState({\n          videosList: formattedData,\n          apiStatus: apiConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiConstants.failure\n        });\n      }\n    };\n\n    this.onClickFailureRetry = () => {\n      this.getVideosData();\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const failureImage = isLightThemeActive ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png' : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png';\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb';\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9';\n        return /*#__PURE__*/_jsxDEV(FailureViewContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FailureViewImage, {\n            src: failureImage,\n            alt: \"failure view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureHeading, {\n            color: failureHeadingColor,\n            children: \"Oops! Something Went Wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureText, {\n            color: failureTextColor,\n            children: \"We are having some trouble to complete you request. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureRetryButton, {\n            type: \"button\",\n            onClick: this.onClickFailureRetry,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoaderView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-container\",\n          \"data-testid\": \"loader\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"ThreeDots\",\n            color: loaderColor,\n            height: \"50\",\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this);\n\n    this.noVideosView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const headingColor = isLightThemeActive ? '#181818' : '#f9f9f9';\n        const textColor = isLightThemeActive ? '#454545' : '#cecece';\n        return /*#__PURE__*/_jsxDEV(NoVideosViewContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NoVideosViewImage, {\n            src: \"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\",\n            alt: \"no videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosHeading, {\n            color: headingColor,\n            children: \"No Search results found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosText, {\n            color: textColor,\n            children: \"Try different key words or remove filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosViewRetryButton, {\n            type: \"button\",\n            onClick: this.getVideosData,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n\n    this.videosList = () => {\n      const {\n        videosList\n      } = this.state;\n\n      if (videosList.length === 0) {\n        return this.noVideosView();\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.renderTrendingBannerContainer(), /*#__PURE__*/_jsxDEV(VideosList, {\n          children: videosList.map(eachItem => /*#__PURE__*/_jsxDEV(VideoListItemTrending, {\n            videoItem: eachItem\n          }, eachItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.renderTrendingBannerContainer = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const bannerBackgroundColor = isLightThemeActive ? '#e2e8f0' : '#313131';\n        const bannerIconBackgroundColor = isLightThemeActive ? '#f1f5f9' : '#231f20';\n        const bannerHeadingColor = isLightThemeActive ? '#181818' : '#f9f9f9';\n        return /*#__PURE__*/_jsxDEV(BannerContainer, {\n          backgroundColor: bannerBackgroundColor,\n          \"data-testid\": \"banner\",\n          children: [/*#__PURE__*/_jsxDEV(BannerIconHeadingContainer, {\n            backgroundColor: bannerIconBackgroundColor,\n            children: /*#__PURE__*/_jsxDEV(HiFire, {\n              color: \"#ff0000\",\n              size: \"90%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BannerHeading, {\n            color: bannerHeadingColor,\n            children: \"Trending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this);\n\n    this.renderAllVideosList = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiConstants.failure:\n          return this.renderFailureView();\n\n        case apiConstants.inProgress:\n          return this.renderLoaderView();\n\n        case apiConstants.success:\n          return this.videosList();\n\n        default:\n          return null;\n      }\n    };\n\n    this.renderMainContainer = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const mainContainerBgColor = isLightThemeActive ? '#f1f5f9' : '#0f0f0f';\n        return /*#__PURE__*/_jsxDEV(MainContainer, {\n          backgroundColor: mainContainerBgColor,\n          children: this.renderAllVideosList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentDidMount() {\n    this.getVideosData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const trendingBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f';\n        return /*#__PURE__*/_jsxDEV(HomeContainer, {\n          backgroundColor: trendingBgColor,\n          \"data-testid\": \"trending\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HomeBarsContainer, {\n            backgroundColor: trendingBgColor,\n            children: [/*#__PURE__*/_jsxDEV(SidebarSection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), this.renderMainContainer()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Trending;","map":{"version":3,"sources":["C:/Users/Nagababu/Documents/GitHub/Netflix/web/src/components/Trending/index.js"],"names":["Component","Cookies","Loader","HiFire","Header","SidebarSection","VideoListItemTrending","Context","HomeContainer","HomeBarsContainer","MainContainer","BannerContainer","BannerIconHeadingContainer","BannerHeading","VideosList","FailureViewContainer","FailureViewImage","FailureHeading","FailureText","FailureRetryButton","NoVideosViewContainer","NoVideosViewImage","NoVideosHeading","NoVideosText","NoVideosViewRetryButton","apiConstants","initial","success","failure","inProgress","Trending","state","apiStatus","videosList","getVideosData","setState","JwtToken","get","videosListUrl","options","headers","Authorization","method","response","fetch","ok","responseData","json","formattedData","videos","map","eachItem","channel","name","profileImageUrl","profile_image_url","id","publishedAt","published_at","thumbnailUrl","thumbnail_url","title","viewCount","view_count","onClickFailureRetry","renderFailureView","value","isLightThemeActive","failureImage","failureHeadingColor","failureTextColor","renderLoaderView","loaderColor","noVideosView","headingColor","textColor","length","renderTrendingBannerContainer","bannerBackgroundColor","bannerIconBackgroundColor","bannerHeadingColor","renderAllVideosList","renderMainContainer","mainContainerBgColor","componentDidMount","render","trendingBgColor"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport {HiFire} from 'react-icons/hi'\r\n\r\nimport Header from '../Header'\r\nimport SidebarSection from '../SidebarContainer'\r\nimport VideoListItemTrending from '../VideoListItemTrending'\r\nimport Context from '../../Context/Context'\r\n\r\nimport './index.css'\r\n\r\nimport {\r\n  HomeContainer,\r\n  HomeBarsContainer,\r\n  MainContainer,\r\n  BannerContainer,\r\n  BannerIconHeadingContainer,\r\n  BannerHeading,\r\n  VideosList,\r\n  FailureViewContainer,\r\n  FailureViewImage,\r\n  FailureHeading,\r\n  FailureText,\r\n  FailureRetryButton,\r\n  NoVideosViewContainer,\r\n  NoVideosViewImage,\r\n  NoVideosHeading,\r\n  NoVideosText,\r\n  NoVideosViewRetryButton,\r\n} from './styledComponents'\r\n\r\nconst apiConstants = {\r\n  initial: 'INITIAL',\r\n  success: 'SUCCESS',\r\n  failure: 'FAILURE',\r\n  inProgress: 'IN_PROGRESS',\r\n}\r\n\r\nclass Trending extends Component {\r\n  state = {\r\n    apiStatus: apiConstants.initial,\r\n    videosList: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getVideosData()\r\n  }\r\n\r\n  getVideosData = async () => {\r\n    this.setState({\r\n      apiStatus: apiConstants.inProgress,\r\n    })\r\n    const JwtToken = Cookies.get('jwt_token')\r\n    const videosListUrl = `https://apis.ccbp.in/videos/trending`\r\n    const options = {\r\n      headers: {\r\n        Authorization: `Bearer ${JwtToken}`,\r\n      },\r\n      method: 'GET',\r\n    }\r\n    const response = await fetch(videosListUrl, options)\r\n    if (response.ok) {\r\n      const responseData = await response.json()\r\n      const formattedData = responseData.videos.map(eachItem => ({\r\n        channel: {\r\n          name: eachItem.channel.name,\r\n          profileImageUrl: eachItem.channel.profile_image_url,\r\n        },\r\n        id: eachItem.id,\r\n        publishedAt: eachItem.published_at,\r\n        thumbnailUrl: eachItem.thumbnail_url,\r\n        title: eachItem.title,\r\n        viewCount: eachItem.view_count,\r\n      }))\r\n      this.setState({\r\n        videosList: formattedData,\r\n        apiStatus: apiConstants.success,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        apiStatus: apiConstants.failure,\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickFailureRetry = () => {\r\n    this.getVideosData()\r\n  }\r\n\r\n  renderFailureView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const failureImage = isLightThemeActive\r\n          ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\r\n          : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\r\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb'\r\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9'\r\n        return (\r\n          <FailureViewContainer>\r\n            <FailureViewImage src={failureImage} alt=\"failure view\" />\r\n            <FailureHeading color={failureHeadingColor}>\r\n              Oops! Something Went Wrong\r\n            </FailureHeading>\r\n            <FailureText color={failureTextColor}>\r\n              We are having some trouble to complete you request. Please try\r\n              again.\r\n            </FailureText>\r\n            <FailureRetryButton\r\n              type=\"button\"\r\n              onClick={this.onClickFailureRetry}\r\n            >\r\n              Retry\r\n            </FailureRetryButton>\r\n          </FailureViewContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderLoaderView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff'\r\n        return (\r\n          <div className=\"loader-container\" data-testid=\"loader\">\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color={loaderColor}\r\n              height=\"50\"\r\n              width=\"50\"\r\n            />\r\n          </div>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  noVideosView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const headingColor = isLightThemeActive ? '#181818' : '#f9f9f9'\r\n        const textColor = isLightThemeActive ? '#454545' : '#cecece'\r\n\r\n        return (\r\n          <NoVideosViewContainer>\r\n            <NoVideosViewImage\r\n              src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\"\r\n              alt=\"no videos\"\r\n            />\r\n            <NoVideosHeading color={headingColor}>\r\n              No Search results found\r\n            </NoVideosHeading>\r\n            <NoVideosText color={textColor}>\r\n              Try different key words or remove filter\r\n            </NoVideosText>\r\n            <NoVideosViewRetryButton type=\"button\" onClick={this.getVideosData}>\r\n              Retry\r\n            </NoVideosViewRetryButton>\r\n          </NoVideosViewContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  videosList = () => {\r\n    const {videosList} = this.state\r\n    if (videosList.length === 0) {\r\n      return this.noVideosView()\r\n    }\r\n    return (\r\n      <>\r\n        {this.renderTrendingBannerContainer()}\r\n        <VideosList>\r\n          {videosList.map(eachItem => (\r\n            <VideoListItemTrending key={eachItem.id} videoItem={eachItem} />\r\n          ))}\r\n        </VideosList>\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderTrendingBannerContainer = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const bannerBackgroundColor = isLightThemeActive ? '#e2e8f0' : '#313131'\r\n        const bannerIconBackgroundColor = isLightThemeActive\r\n          ? '#f1f5f9'\r\n          : '#231f20'\r\n        const bannerHeadingColor = isLightThemeActive ? '#181818' : '#f9f9f9'\r\n        return (\r\n          <BannerContainer\r\n            backgroundColor={bannerBackgroundColor}\r\n            data-testid=\"banner\"\r\n          >\r\n            <BannerIconHeadingContainer\r\n              backgroundColor={bannerIconBackgroundColor}\r\n            >\r\n              <HiFire color=\"#ff0000\" size=\"90%\" />\r\n            </BannerIconHeadingContainer>\r\n            <BannerHeading color={bannerHeadingColor}>Trending</BannerHeading>\r\n          </BannerContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderAllVideosList = () => {\r\n    const {apiStatus} = this.state\r\n\r\n    switch (apiStatus) {\r\n      case apiConstants.failure:\r\n        return this.renderFailureView()\r\n      case apiConstants.inProgress:\r\n        return this.renderLoaderView()\r\n      case apiConstants.success:\r\n        return this.videosList()\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  renderMainContainer = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const mainContainerBgColor = isLightThemeActive ? '#f1f5f9' : '#0f0f0f'\r\n\r\n        return (\r\n          <MainContainer backgroundColor={mainContainerBgColor}>\r\n            {this.renderAllVideosList()}\r\n          </MainContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const {isLightThemeActive} = value\r\n          const trendingBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f'\r\n          return (\r\n            <HomeContainer\r\n              backgroundColor={trendingBgColor}\r\n              data-testid=\"trending\"\r\n            >\r\n              <Header />\r\n              <HomeBarsContainer backgroundColor={trendingBgColor}>\r\n                <SidebarSection />\r\n                {this.renderMainContainer()}\r\n              </HomeBarsContainer>\r\n            </HomeContainer>\r\n          )\r\n        }}\r\n      </Context.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Trending\r\n"]},"metadata":{},"sourceType":"module"}