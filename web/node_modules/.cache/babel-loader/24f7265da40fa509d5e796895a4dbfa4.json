{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nagababu\\\\Documents\\\\GitHub\\\\Netflix\\\\web\\\\src\\\\components\\\\Home\\\\index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { RiCloseFill } from 'react-icons/ri';\nimport { BsSearch } from 'react-icons/bs';\nimport Header from '../Header';\nimport SidebarSection from '../SidebarContainer';\nimport VideoItemCard from '../VideoListItem';\nimport Context from '../../Context/Context';\nimport './index.css';\nimport { HomeContainer, HomeBarsContainer, MainContainer, BannerContainer, BannerContentContainer, BannerCloseButton, BannerHeading, BannerImage, BannerButton, VideosListHome, FailureViewContainer, FailureViewImage, FailureHeading, FailureText, FailureRetryButton, SearchForm, SearchInput, SearchButton, NoVideosViewContainer, NoVideosViewImage, NoVideosHeading, NoVideosText, NoVideosViewRetryButton } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isBannerActive: true,\n      apiStatus: apiConstants.initial,\n      videosList: [],\n      searchInput: '',\n      searchParameter: ''\n    };\n\n    this.updateSearchValue = event => {\n      this.setState({\n        searchInput: event.target.value\n      });\n    };\n\n    this.onSubmitSearchForm = () => {\n      const {\n        searchInput,\n        videosList\n      } = this.state;\n      const filteredData = videosList.filter(movie => movie.title.toLowerCases().includes(searchInput.toLowerCase()));\n      this.setState({\n        videosList: filteredData\n      });\n    };\n\n    this.changeActiveRoute = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          alterActiveRoute,\n          activeRoute\n        } = value;\n        alterActiveRoute('home');\n        console.log(activeRoute);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n\n    this.getVideosData = async () => {\n      this.setState({\n        apiStatus: apiConstants.inProgress\n      });\n      const {\n        searchParameter\n      } = this.state;\n      const JwtToken = Cookies.get('jwt_token');\n      const videosListUrl = `http://127.0.0.1:8000/movies`; // const options = {\n      //   headers: {\n      //     Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU`,\n      //   },\n      //   method: 'GET',\n      // }\n\n      const response = await fetch(videosListUrl);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log(responseData);\n        const formattedData = responseData.map(eachItem => ({\n          name: eachItem.name,\n          profileImageUrl: eachItem.profile_image_url,\n          id: eachItem.id,\n          publishedAt: eachItem.published_at,\n          thumbnailUrl: eachItem.thumbnail_url,\n          title: eachItem.title,\n          viewCount: eachItem.view_count\n        }));\n        this.setState({\n          videosList: formattedData,\n          apiStatus: apiConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiConstants.failure\n        });\n      }\n    };\n\n    this.hideBanner = () => {\n      this.setState({\n        isBannerActive: false\n      });\n    };\n\n    this.onClickFailureRetry = () => {\n      this.getVideosData();\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const failureImage = isLightThemeActive ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png' : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png';\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb';\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9';\n        return /*#__PURE__*/_jsxDEV(FailureViewContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FailureViewImage, {\n            src: failureImage,\n            alt: \"failure view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureHeading, {\n            color: failureHeadingColor,\n            children: \"Oops! Something Went Wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureText, {\n            color: failureTextColor,\n            children: \"We are having some trouble to complete you request. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureRetryButton, {\n            type: \"button\",\n            onClick: this.onClickFailureRetry,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoaderView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-container\",\n          \"data-testid\": \"loader\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"ThreeDots\",\n            color: loaderColor,\n            height: \"50\",\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this);\n\n    this.noVideosView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const headingColor = isLightThemeActive ? '#181818' : '#f9f9f9';\n        const textColor = isLightThemeActive ? '#454545' : '#cecece';\n        return /*#__PURE__*/_jsxDEV(NoVideosViewContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NoVideosViewImage, {\n            src: \"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\",\n            alt: \"no videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosHeading, {\n            color: headingColor,\n            children: \"No Search results found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosText, {\n            color: textColor,\n            children: \"Try different key words or remove search filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoVideosViewRetryButton, {\n            type: \"button\",\n            onClick: this.getVideosData,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this);\n\n    this.videosList = () => {\n      const {\n        videosList\n      } = this.state;\n\n      if (videosList.length === 0) {\n        return this.noVideosView();\n      }\n\n      return /*#__PURE__*/_jsxDEV(VideosListHome, {\n        children: videosList.map(eachItem => /*#__PURE__*/_jsxDEV(VideoItemCard, {\n          videoItem: eachItem\n        }, eachItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderBannerContainer = () => /*#__PURE__*/_jsxDEV(BannerContainer, {\n      \"data-testid\": \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(BannerContentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(BannerImage, {\n          src: \"https://res.cloudinary.com/dnbrzqhbk/image/upload/v1639388967/wp5063339_dyoz5m.png\",\n          alt: \"nxt watch logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BannerHeading, {\n          children: \"Buy Netflix Premium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BannerButton, {\n          type: \"button\",\n          children: \"GET IT NOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BannerCloseButton, {\n        type: \"button\",\n        onClick: this.hideBanner,\n        \"data-testid\": \"close\",\n        children: /*#__PURE__*/_jsxDEV(RiCloseFill, {\n          size: \"22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this);\n\n    this.renderAllVideosList = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiConstants.failure:\n          return this.renderFailureView();\n\n        case apiConstants.inProgress:\n          return this.renderLoaderView();\n\n        case apiConstants.success:\n          return this.videosList();\n\n        default:\n          return null;\n      }\n    };\n\n    this.renderSearchContainer = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const inputTextColor = isLightThemeActive ? '#181818' : '#f9f9f9';\n        const buttonBackgroundColor = isLightThemeActive ? '#f9f9f9' : '#181818';\n        return /*#__PURE__*/_jsxDEV(SearchForm, {\n          children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n            placeholder: \"Search\",\n            type: \"search\",\n            color: inputTextColor,\n            onChange: this.updateSearchValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n            type: \"button\",\n            backgroundColor: buttonBackgroundColor,\n            \"data-testid\": \"searchButton\",\n            onClick: this.onSubmitSearchForm,\n            children: /*#__PURE__*/_jsxDEV(BsSearch, {\n              size: \"22\",\n              color: inputTextColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n\n    this.renderMainContainer = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isBannerActive\n        } = this.state;\n        const {\n          isLightThemeActive\n        } = value;\n        const mainContainerBgColor = isLightThemeActive ? '#f1f5f9' : '#0f0f0f';\n        return /*#__PURE__*/_jsxDEV(MainContainer, {\n          backgroundColor: mainContainerBgColor,\n          children: [isBannerActive ? this.renderBannerContainer() : null, this.renderSearchContainer(), this.renderAllVideosList()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentDidMount() {\n    this.getVideosData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const homeBgColor = isLightThemeActive ? '#f9f9f9' : '#181818';\n        return /*#__PURE__*/_jsxDEV(HomeContainer, {\n          backgroundColor: homeBgColor,\n          \"data-testid\": \"home\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HomeBarsContainer, {\n            backgroundColor: homeBgColor,\n            children: [/*#__PURE__*/_jsxDEV(SidebarSection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), this.renderMainContainer()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Nagababu/Documents/GitHub/Netflix/web/src/components/Home/index.js"],"names":["Component","Cookies","Loader","RiCloseFill","BsSearch","Header","SidebarSection","VideoItemCard","Context","HomeContainer","HomeBarsContainer","MainContainer","BannerContainer","BannerContentContainer","BannerCloseButton","BannerHeading","BannerImage","BannerButton","VideosListHome","FailureViewContainer","FailureViewImage","FailureHeading","FailureText","FailureRetryButton","SearchForm","SearchInput","SearchButton","NoVideosViewContainer","NoVideosViewImage","NoVideosHeading","NoVideosText","NoVideosViewRetryButton","apiConstants","initial","success","failure","inProgress","Home","state","isBannerActive","apiStatus","videosList","searchInput","searchParameter","updateSearchValue","event","setState","target","value","onSubmitSearchForm","filteredData","filter","movie","title","toLowerCases","includes","toLowerCase","changeActiveRoute","alterActiveRoute","activeRoute","console","log","getVideosData","JwtToken","get","videosListUrl","response","fetch","ok","responseData","json","formattedData","map","eachItem","name","profileImageUrl","profile_image_url","id","publishedAt","published_at","thumbnailUrl","thumbnail_url","viewCount","view_count","hideBanner","onClickFailureRetry","renderFailureView","isLightThemeActive","failureImage","failureHeadingColor","failureTextColor","renderLoaderView","loaderColor","noVideosView","headingColor","textColor","length","renderBannerContainer","renderAllVideosList","renderSearchContainer","inputTextColor","buttonBackgroundColor","renderMainContainer","mainContainerBgColor","componentDidMount","render","homeBgColor"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport {RiCloseFill} from 'react-icons/ri'\r\nimport {BsSearch} from 'react-icons/bs'\r\n\r\nimport Header from '../Header'\r\nimport SidebarSection from '../SidebarContainer'\r\nimport VideoItemCard from '../VideoListItem'\r\nimport Context from '../../Context/Context'\r\n\r\nimport './index.css'\r\nimport {\r\n  HomeContainer,\r\n  HomeBarsContainer,\r\n  MainContainer,\r\n  BannerContainer,\r\n  BannerContentContainer,\r\n  BannerCloseButton,\r\n  BannerHeading,\r\n  BannerImage,\r\n  BannerButton,\r\n  VideosListHome,\r\n  FailureViewContainer,\r\n  FailureViewImage,\r\n  FailureHeading,\r\n  FailureText,\r\n  FailureRetryButton,\r\n  SearchForm,\r\n  SearchInput,\r\n  SearchButton,\r\n  NoVideosViewContainer,\r\n  NoVideosViewImage,\r\n  NoVideosHeading,\r\n  NoVideosText,\r\n  NoVideosViewRetryButton,\r\n} from './styledComponents'\r\n\r\nconst apiConstants = {\r\n  initial: 'INITIAL',\r\n  success: 'SUCCESS',\r\n  failure: 'FAILURE',\r\n  inProgress: 'IN_PROGRESS',\r\n}\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isBannerActive: true,\r\n    apiStatus: apiConstants.initial,\r\n    videosList: [],\r\n    searchInput: '',\r\n    searchParameter: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getVideosData()\r\n  }\r\n\r\n  updateSearchValue = event => {\r\n    this.setState({searchInput: event.target.value})\r\n  }\r\n\r\n  onSubmitSearchForm = () => {\r\n    const {searchInput,videosList} = this.state\r\n    const filteredData = videosList.filter(movie => movie.title.toLowerCases().includes(searchInput.toLowerCase()))\r\n    this.setState({videosList: filteredData})\r\n  }\r\n\r\n  changeActiveRoute = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {alterActiveRoute, activeRoute} = value\r\n        alterActiveRoute('home')\r\n        console.log(activeRoute)\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  getVideosData = async () => {\r\n    this.setState({\r\n      apiStatus: apiConstants.inProgress,\r\n    })\r\n    const {searchParameter} = this.state\r\n    const JwtToken = Cookies.get('jwt_token')\r\n    const videosListUrl = `http://127.0.0.1:8000/movies`\r\n    // const options = {\r\n    //   headers: {\r\n    //     Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU`,\r\n    //   },\r\n    //   method: 'GET',\r\n    // }\r\n    const response = await fetch(videosListUrl)\r\n    if (response.ok) {\r\n      const responseData = await response.json()\r\n      console.log(responseData)\r\n      const formattedData = responseData.map(eachItem => ({\r\n        \r\n          name: eachItem.name,\r\n          profileImageUrl: eachItem.profile_image_url,\r\n        \r\n        id: eachItem.id,\r\n        publishedAt: eachItem.published_at,\r\n        thumbnailUrl: eachItem.thumbnail_url,\r\n        title: eachItem.title,\r\n        viewCount: eachItem.view_count,\r\n      }))\r\n      this.setState({\r\n        videosList: formattedData,\r\n        apiStatus: apiConstants.success,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        apiStatus: apiConstants.failure,\r\n      })\r\n    }\r\n  }\r\n\r\n  hideBanner = () => {\r\n    this.setState({\r\n      isBannerActive: false,\r\n    })\r\n  }\r\n\r\n  onClickFailureRetry = () => {\r\n    this.getVideosData()\r\n  }\r\n\r\n  renderFailureView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const failureImage = isLightThemeActive\r\n          ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\r\n          : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\r\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb'\r\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9'\r\n        return (\r\n          <FailureViewContainer>\r\n            <FailureViewImage src={failureImage} alt=\"failure view\" />\r\n            <FailureHeading color={failureHeadingColor}>\r\n              Oops! Something Went Wrong\r\n            </FailureHeading>\r\n            <FailureText color={failureTextColor}>\r\n              We are having some trouble to complete you request. Please try\r\n              again.\r\n            </FailureText>\r\n            <FailureRetryButton\r\n              type=\"button\"\r\n              onClick={this.onClickFailureRetry}\r\n            >\r\n              Retry\r\n            </FailureRetryButton>\r\n          </FailureViewContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderLoaderView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff'\r\n        return (\r\n          <div className=\"loader-container\" data-testid=\"loader\">\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color={loaderColor}\r\n              height=\"50\"\r\n              width=\"50\"\r\n            />\r\n          </div>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  noVideosView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const headingColor = isLightThemeActive ? '#181818' : '#f9f9f9'\r\n        const textColor = isLightThemeActive ? '#454545' : '#cecece'\r\n\r\n        return (\r\n          <NoVideosViewContainer>\r\n            <NoVideosViewImage\r\n              src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\"\r\n              alt=\"no videos\"\r\n            />\r\n            <NoVideosHeading color={headingColor}>\r\n              No Search results found\r\n            </NoVideosHeading>\r\n            <NoVideosText color={textColor}>\r\n              Try different key words or remove search filter\r\n            </NoVideosText>\r\n            <NoVideosViewRetryButton type=\"button\" onClick={this.getVideosData}>\r\n              Retry\r\n            </NoVideosViewRetryButton>\r\n          </NoVideosViewContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  videosList = () => {\r\n    const {videosList} = this.state\r\n    if (videosList.length === 0) {\r\n      return this.noVideosView()\r\n    }\r\n    return (\r\n      <VideosListHome>\r\n        {videosList.map(eachItem => (\r\n          <VideoItemCard key={eachItem.id} videoItem={eachItem} />\r\n        ))}\r\n      </VideosListHome>\r\n    )\r\n  }\r\n\r\n  renderBannerContainer = () => (\r\n    <BannerContainer data-testid=\"banner\">\r\n      <BannerContentContainer>\r\n        <BannerImage\r\n          src=\"https://res.cloudinary.com/dnbrzqhbk/image/upload/v1639388967/wp5063339_dyoz5m.png\"\r\n          alt=\"nxt watch logo\"\r\n        />\r\n        <BannerHeading>Buy Netflix Premium</BannerHeading>\r\n        <BannerButton type=\"button\">GET IT NOW</BannerButton>\r\n      </BannerContentContainer>\r\n      <BannerCloseButton\r\n        type=\"button\"\r\n        onClick={this.hideBanner}\r\n        data-testid=\"close\"\r\n      >\r\n        <RiCloseFill size=\"22\" />\r\n      </BannerCloseButton>\r\n    </BannerContainer>\r\n  )\r\n\r\n  renderAllVideosList = () => {\r\n    const {apiStatus} = this.state\r\n\r\n    switch (apiStatus) {\r\n      case apiConstants.failure:\r\n        return this.renderFailureView()\r\n      case apiConstants.inProgress:\r\n        return this.renderLoaderView()\r\n      case apiConstants.success:\r\n        return this.videosList()\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  renderSearchContainer = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const inputTextColor = isLightThemeActive ? '#181818' : '#f9f9f9'\r\n        const buttonBackgroundColor = isLightThemeActive ? '#f9f9f9' : '#181818'\r\n        return (\r\n          <SearchForm>\r\n            <SearchInput\r\n              placeholder=\"Search\"\r\n              type=\"search\"\r\n              color={inputTextColor}\r\n              onChange={this.updateSearchValue}\r\n            />\r\n            <SearchButton\r\n              type=\"button\"\r\n              backgroundColor={buttonBackgroundColor}\r\n              data-testid=\"searchButton\"\r\n              onClick={this.onSubmitSearchForm}\r\n            >\r\n              <BsSearch size=\"22\" color={inputTextColor} />\r\n            </SearchButton>\r\n          </SearchForm>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderMainContainer = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isBannerActive} = this.state\r\n        const {isLightThemeActive} = value\r\n        const mainContainerBgColor = isLightThemeActive ? '#f1f5f9' : '#0f0f0f'\r\n\r\n        return (\r\n          <MainContainer backgroundColor={mainContainerBgColor}>\r\n            {isBannerActive ? this.renderBannerContainer() : null}\r\n            {this.renderSearchContainer()}\r\n            {this.renderAllVideosList()}\r\n          </MainContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const {isLightThemeActive} = value\r\n          const homeBgColor = isLightThemeActive ? '#f9f9f9' : '#181818'\r\n          return (\r\n            <HomeContainer backgroundColor={homeBgColor} data-testid=\"home\">\r\n              <Header />\r\n              <HomeBarsContainer backgroundColor={homeBgColor}>\r\n                <SidebarSection />\r\n                {this.renderMainContainer()}\r\n              </HomeBarsContainer>\r\n            </HomeContainer>\r\n          )\r\n        }}\r\n      </Context.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}