{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nagababu\\\\Documents\\\\GitHub\\\\Netflix\\\\web\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Trending from './components/Trending';\nimport Gaming from './components/Gaming';\nimport SavedVideos from './components/SavedVideos';\nimport VideoItemDetails from './components/VideoItemDetails';\nimport NotFound from './components/NotFound';\nimport Context from './Context/Context';\nimport './App.css'; // Replace your code here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // const favorite = this.getFavoriteData()\n    // const empytlist = []\n    // // favorite.forEach((product) => {\n    // //   console.log(favorite[i])\n    // // })\n    // console.log(favorite, \"is working\")\n\n    this.alterTheme = () => {\n      this.setState(prevItem => ({\n        isLightThemeActive: !prevItem.isLightThemeActive\n      }));\n    };\n\n    this.alterActiveRoute = routeName => {\n      this.setState({\n        activeRoute: routeName\n      });\n    };\n\n    this.getFavoriteAdd = movie_id => {\n      console.log(movie_id, 'add');\n      const url = `http://127.0.0.1:8000/favourite/${movie_id}`;\n      const myToken = Cookies.get(\"jwt_token\"); // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\n\n      const options = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': \"*\",\n          \"Authorization\": \"Bearer \" + myToken\n        }\n      };\n      fetch(url, options);\n    };\n\n    this.getFavoriteDelete = movie_id => {\n      console.log(movie_id, 'delete');\n      const url = `http://127.0.0.1:8000/favouritedelete/${movie_id}`;\n      const myToken = Cookies.get(\"jwt_token\"); // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\n\n      const options = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': \"*\",\n          \"Authorization\": \"Bearer \" + myToken\n        }\n      };\n      fetch(url, options).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.getFavoriteData = () => {\n      const url = \"http://127.0.0.1:8000/favourite\";\n      const myToken = Cookies.get(\"jwt_token\"); // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\n\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': \"*\",\n          \"Authorization\": \"Bearer \" + myToken\n        }\n      };\n      fetch(url, options).then(response => response.json()).then(data => {\n        if (data.length !== 0) {\n          const formattedData = data.map(eachItem => ({\n            name: eachItem.name,\n            profileImageUrl: eachItem.profile_image_url,\n            id: eachItem.id,\n            publishedAt: eachItem.published_at,\n            thumbnailUrl: eachItem.thumbnail_url,\n            title: eachItem.title,\n            viewCount: eachItem.view_count\n          }));\n          this.setState({\n            savedVideosList: formattedData\n          });\n        } else {\n          this.setState({\n            savedVideosList: data\n          });\n        }\n      });\n    };\n\n    this.saveOrDeleteVideo = newVideoItem => {\n      // console.log(newVideoItem)\n      const {\n        savedVideosList\n      } = this.state;\n      const isVideoSaved = savedVideosList.find(eachItem => eachItem.id === newVideoItem.id);\n      console.log(isVideoSaved);\n\n      if (isVideoSaved) {\n        // const filteredList = savedVideosList.filter(\n        //   eachItem => eachItem.id !== newVideoItem.id,\n        // )\n        this.getFavoriteDelete(newVideoItem.id); // this.setState({savedVideosList: filteredList})\n      } else {\n        // this.setState(prevState => ({\n        //   savedVideosList: [...prevState.savedVideosList, newVideoItem],\n        // }))\n        this.getFavoriteAdd(newVideoItem.id);\n      }\n    };\n\n    this.state = {\n      isLightThemeActive: true,\n      activeRoute: 'home',\n      savedVideosList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getFavoriteData();\n  }\n\n  render() {\n    const {\n      isLightThemeActive,\n      activeRoute,\n      savedVideosList,\n      isVideoSaved\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        isLightThemeActive,\n        alterTheme: this.alterTheme,\n        activeRoute,\n        alterActiveRoute: this.alterActiveRoute,\n        savedVideosList,\n        isVideoSaved,\n        saveOrDeleteVideo: this.saveOrDeleteVideo\n      },\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          exact: true,\n          path: \"/trending\",\n          component: Trending\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          exact: true,\n          path: \"/gaming\",\n          component: Gaming\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          exact: true,\n          path: \"/saved-videos\",\n          component: SavedVideos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          exact: true,\n          path: \"/videos/:id\",\n          component: VideoItemDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/not-found\",\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/not-found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nagababu/Documents/GitHub/Netflix/web/src/App.js"],"names":["Component","Switch","Route","Redirect","Cookies","AuthenticatedRoute","Login","Home","Trending","Gaming","SavedVideos","VideoItemDetails","NotFound","Context","App","constructor","props","alterTheme","setState","prevItem","isLightThemeActive","alterActiveRoute","routeName","activeRoute","getFavoriteAdd","movie_id","console","log","url","myToken","get","options","method","headers","fetch","getFavoriteDelete","then","response","json","data","getFavoriteData","length","formattedData","map","eachItem","name","profileImageUrl","profile_image_url","id","publishedAt","published_at","thumbnailUrl","thumbnail_url","title","viewCount","view_count","savedVideosList","saveOrDeleteVideo","newVideoItem","state","isVideoSaved","find","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute'\r\nimport Login from './components/Login'\r\nimport Home from './components/Home'\r\nimport Trending from './components/Trending'\r\nimport Gaming from './components/Gaming'\r\nimport SavedVideos from './components/SavedVideos'\r\nimport VideoItemDetails from './components/VideoItemDetails'\r\nimport NotFound from './components/NotFound'\r\nimport Context from './Context/Context'\r\n\r\nimport './App.css'\r\n\r\n// Replace your code here\r\nclass App extends Component {\r\n    constructor(props){  \r\n    super(props);  \r\n    // const favorite = this.getFavoriteData()\r\n    // const empytlist = []\r\n    // // favorite.forEach((product) => {\r\n    // //   console.log(favorite[i])\r\n    // // })\r\n\r\n    // console.log(favorite, \"is working\")\r\n    this.state = {\r\n      isLightThemeActive: true,\r\n      activeRoute: 'home',\r\n      savedVideosList: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getFavoriteData()\r\n  }\r\n\r\n  alterTheme = () => {\r\n    this.setState(prevItem => ({\r\n      isLightThemeActive: !prevItem.isLightThemeActive,\r\n    }))\r\n  }\r\n\r\n  alterActiveRoute = routeName => {\r\n    this.setState({activeRoute: routeName})\r\n  }\r\n\r\n\r\n\r\n  getFavoriteAdd = (movie_id) =>{\r\n    console.log(movie_id,'add')\r\n    const url = `http://127.0.0.1:8000/favourite/${movie_id}`\r\n    const myToken = Cookies.get(\"jwt_token\")\r\n    // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\r\n    const options = {\r\n        method: \"DELETE\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Origin': \"*\",\r\n            \"Authorization\": \"Bearer \" + myToken\r\n        },\r\n        \r\n    }\r\n    fetch(url, options)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getFavoriteDelete = (movie_id) =>{\r\n    console.log(movie_id,'delete')\r\n    const url = `http://127.0.0.1:8000/favouritedelete/${movie_id}`\r\n    const myToken = Cookies.get(\"jwt_token\")\r\n    // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\r\n    const options = {\r\n        method: \"DELETE\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Origin': \"*\",\r\n            \"Authorization\": \"Bearer \" + myToken\r\n        },\r\n        \r\n    }\r\n    fetch(url, options).then(response => \r\n        response.json()\r\n        ).then(data => {\r\nconsole.log(data)\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  getFavoriteData = () =>{\r\n    const url = \"http://127.0.0.1:8000/favourite\"\r\n    const myToken = Cookies.get(\"jwt_token\")\r\n    // const new_data = {\"user_name\": \"\", \"product_name\": product_name, \"image_url\":image_url, \"price\": price, \"rating\": rating}\r\n    const options = {\r\n        method: \"GET\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Origin': \"*\",\r\n            \"Authorization\": \"Bearer \" + myToken\r\n        },\r\n        \r\n    }\r\n    fetch(url, options).then(response => \r\n        response.json()\r\n        ).then(data => {\r\n\r\n          if (data.length !== 0) {\r\n            const formattedData = data.map(eachItem => ({\r\n              \r\n                name: eachItem.name,\r\n                profileImageUrl: eachItem.profile_image_url,\r\n              \r\n              id: eachItem.id,\r\n              publishedAt: eachItem.published_at,\r\n              thumbnailUrl: eachItem.thumbnail_url,\r\n              title: eachItem.title,\r\n              viewCount: eachItem.view_count,\r\n            }))\r\n            this.setState({\r\n              savedVideosList: formattedData\r\n            })\r\n          }else{\r\n            this.setState({savedVideosList: data})\r\n          }\r\n\r\n        })\r\n}\r\n\r\n\r\n  saveOrDeleteVideo = newVideoItem => {\r\n    // console.log(newVideoItem)\r\n    const {savedVideosList} = this.state\r\n    const isVideoSaved = savedVideosList.find(\r\n      eachItem => eachItem.id === newVideoItem.id,\r\n    )\r\n    console.log(isVideoSaved)\r\n    if (isVideoSaved) {\r\n      // const filteredList = savedVideosList.filter(\r\n      //   eachItem => eachItem.id !== newVideoItem.id,\r\n      // )\r\n      this.getFavoriteDelete(newVideoItem.id)\r\n      // this.setState({savedVideosList: filteredList})\r\n    } else {\r\n      // this.setState(prevState => ({\r\n      //   savedVideosList: [...prevState.savedVideosList, newVideoItem],\r\n      // }))\r\n      this.getFavoriteAdd(newVideoItem.id)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLightThemeActive,\r\n      activeRoute,\r\n      savedVideosList,\r\n      isVideoSaved,\r\n    } = this.state\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          isLightThemeActive,\r\n          alterTheme: this.alterTheme,\r\n          activeRoute,\r\n          alterActiveRoute: this.alterActiveRoute,\r\n          savedVideosList,\r\n          isVideoSaved,\r\n          saveOrDeleteVideo: this.saveOrDeleteVideo,\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <AuthenticatedRoute exact path=\"/\" component={Home} />\r\n          <AuthenticatedRoute exact path=\"/trending\" component={Trending} />\r\n          <AuthenticatedRoute exact path=\"/gaming\" component={Gaming} />\r\n          <AuthenticatedRoute\r\n            exact\r\n            path=\"/saved-videos\"\r\n            component={SavedVideos}\r\n          />\r\n          <AuthenticatedRoute\r\n            exact\r\n            path=\"/videos/:id\"\r\n            component={VideoItemDetails}\r\n          />\r\n          <Route exact path=\"/not-found\" component={NotFound} />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}