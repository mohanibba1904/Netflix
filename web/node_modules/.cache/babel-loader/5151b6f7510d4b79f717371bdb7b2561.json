{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nagababu\\\\Documents\\\\GitHub\\\\Netflix\\\\web\\\\src\\\\components\\\\VideoItemDetails\\\\index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport ReactPlayer from 'react-player';\nimport { format, formatDistanceToNow } from 'date-fns';\nimport { BsDot } from 'react-icons/bs';\nimport { AiOutlineLike, AiOutlineDislike } from 'react-icons/ai';\nimport { CgPlayListAdd } from 'react-icons/cg';\nimport Header from '../Header';\nimport SidebarSection from '../SidebarContainer';\nimport Context from '../../Context/Context';\nimport { VideoItemDetailsContainer, VideoItemDetailsRowContainer, VideoItemContainer, FailureViewContainer, FailureViewImage, FailureHeading, FailureText, FailureRetryButton, VideoItemDescription, ParametersAndLikesContainer, ParametersAndLikesInnerContainer, VideoItemDetailsText, VideoItemDetailsSmallButton, VideoItemLine, VideoItemProfileContainer, VideoItemProfileImage, VideoItemProfileDescriptionContainer, VideoProfileChannelName, VideoProfileChannelSubscribers, VideoProfileDescriptionLargeText, VideoProfileDescriptionSmallText } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass VideoItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiStatus: apiConstants.initial,\n      isLikeActive: false,\n      isDislikeActive: false\n    };\n\n    this.formattedData = responseData => responseData.similar_videos.map(eachItem => ({\n      channel: {\n        name: eachItem.channel.name,\n        profileImageUrl: eachItem.channel.profile_image_url\n      },\n      id: eachItem.id,\n      publishedAt: eachItem.published_at,\n      thumbnailUrl: eachItem.thumbnail_url,\n      title: eachItem.title,\n      viewCount: eachItem.view_count\n    }));\n\n    this.getVideoItemDetailsData = async () => {\n      this.setState({\n        apiStatus: apiConstants.inProgress\n      });\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const jwtToken = Cookies.get('jwt_token');\n      const videoItemDetailsUrl = `https://apis.ccbp.in/videos/${id}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU`\n        },\n        method: 'GET'\n      };\n      const videoDetailsResponse = await fetch(videoItemDetailsUrl, options);\n\n      if (videoDetailsResponse.ok) {\n        const videoDetailsData = await videoDetailsResponse.json();\n        const formattedVideoDetailsData = {\n          channel: {\n            name: videoDetailsData.video_details.channel.name,\n            profileImageUrl: videoDetailsData.video_details.channel.profile_image_url,\n            subscriberCount: videoDetailsData.video_details.channel.subscriber_count\n          },\n          id: videoDetailsData.video_details.id,\n          description: videoDetailsData.video_details.description,\n          publishedAt: videoDetailsData.video_details.published_at,\n          thumbnailUrl: videoDetailsData.video_details.thumbnail_url,\n          title: videoDetailsData.video_details.title,\n          viewCount: videoDetailsData.video_details.view_count,\n          videoUrl: videoDetailsData.video_details.video_url\n        };\n        this.setState({\n          videoDetails: formattedVideoDetailsData,\n          apiStatus: apiConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiConstants.failure\n        });\n      }\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const failureImage = isLightThemeActive ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png' : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png';\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb';\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9';\n        return /*#__PURE__*/_jsxDEV(FailureViewContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FailureViewImage, {\n            src: failureImage,\n            alt: \"failure view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureHeading, {\n            color: failureHeadingColor,\n            children: \"Oops! Something Went Wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureText, {\n            color: failureTextColor,\n            children: \"We are having some trouble to complete your request. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FailureRetryButton, {\n            type: \"button\",\n            onClick: this.getVideoItemDetailsData,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoaderView = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-container\",\n          \"data-testid\": \"loader\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"ThreeDots\",\n            color: loaderColor,\n            height: \"50\",\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n\n    this.toggleLikeButton = () => {\n      this.setState({\n        isLikeActive: true,\n        isDislikeActive: false\n      });\n    };\n\n    this.toggleDislikeButton = () => {\n      this.setState({\n        isLikeActive: false,\n        isDislikeActive: true\n      });\n    };\n\n    this.renderVideoItemDetails = () => /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive,\n          saveOrDeleteVideo,\n          savedVideosList\n        } = value;\n        const {\n          videoDetails,\n          isLikeActive,\n          isDislikeActive\n        } = this.state;\n        const activeButtonColor = '#2563eb';\n        const inActiveButtonColor = ' #64748b';\n        const videoItemBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f';\n        const videoItemDescriptionColor = isLightThemeActive ? '#475569' : '#cecece';\n        const alreadySavedVideos = savedVideosList.filter(eachItem => eachItem.id === videoDetails.id);\n        const isThisVideoSaved = alreadySavedVideos.length !== 0;\n        const textColor = isLightThemeActive ? '#424242' : '#cccccc';\n        const formattedDate = format(new Date(videoDetails.publishedAt), 'yyyy, MM, dd');\n        const newDate = new Date(formattedDate);\n        const publishedTimeAgo = formatDistanceToNow(newDate);\n        const channelNameColor = isLightThemeActive ? '#1e293b' : '#cccccc';\n        const channelSubscriberColor = isLightThemeActive ? '#475569' : '#f1f1f1';\n\n        const onClickSaveOrDeleteButton = () => {\n          saveOrDeleteVideo(videoDetails);\n        };\n\n        return /*#__PURE__*/_jsxDEV(VideoItemContainer, {\n          backgroundColor: videoItemBgColor,\n          \"data-testid\": \"videoItemDetails\",\n          children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n            controls: true,\n            width: \"90%\",\n            url: videoDetails.videoUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoItemDescription, {\n            color: videoItemDescriptionColor,\n            children: videoDetails.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ParametersAndLikesContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ParametersAndLikesInnerContainer, {\n              children: [/*#__PURE__*/_jsxDEV(VideoItemDetailsText, {\n                color: textColor,\n                children: `${videoDetails.viewCount} views`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BsDot, {\n                size: \"22\",\n                color: textColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VideoItemDetailsText, {\n                color: textColor,\n                children: publishedTimeAgo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ParametersAndLikesInnerContainer, {\n              children: [/*#__PURE__*/_jsxDEV(VideoItemDetailsSmallButton, {\n                type: \"button\",\n                onClick: this.toggleLikeButton,\n                color: isLikeActive ? activeButtonColor : inActiveButtonColor,\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), \"Like\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VideoItemDetailsSmallButton, {\n                type: \"button\",\n                onClick: this.toggleDislikeButton,\n                color: isDislikeActive ? activeButtonColor : inActiveButtonColor,\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineDislike, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), \"Dislike\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VideoItemDetailsSmallButton, {\n                type: \"button\",\n                onClick: onClickSaveOrDeleteButton,\n                color: isThisVideoSaved ? activeButtonColor : inActiveButtonColor,\n                children: [/*#__PURE__*/_jsxDEV(CgPlayListAdd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), isThisVideoSaved ? 'Saved' : 'Save']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoItemLine, {\n            color: textColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoItemProfileContainer, {\n            children: [/*#__PURE__*/_jsxDEV(VideoItemProfileImage, {\n              src: videoDetails.channel.profileImageUrl,\n              alt: \"channel logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VideoItemProfileDescriptionContainer, {\n              children: [/*#__PURE__*/_jsxDEV(VideoProfileChannelName, {\n                color: channelNameColor,\n                children: videoDetails.channel.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VideoProfileChannelSubscribers, {\n                color: channelSubscriberColor,\n                children: videoDetails.channel.subscriberCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VideoProfileDescriptionLargeText, {\n                color: channelNameColor,\n                children: videoDetails.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this);\n\n    this.renderVideoItemView = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiConstants.failure:\n          return this.renderFailureView();\n\n        case apiConstants.inProgress:\n          return this.renderLoaderView();\n\n        case apiConstants.success:\n          return this.renderVideoItemDetails();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getVideoItemDetailsData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Consumer, {\n      children: value => {\n        const {\n          isLightThemeActive\n        } = value;\n        const videoItemBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f';\n        return /*#__PURE__*/_jsxDEV(VideoItemDetailsContainer, {\n          backgroundColor: videoItemBgColor,\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoItemDetailsRowContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SidebarSection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), this.renderVideoItemView()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoItemDetails;","map":{"version":3,"sources":["C:/Users/Nagababu/Documents/GitHub/Netflix/web/src/components/VideoItemDetails/index.js"],"names":["Component","Cookies","Loader","ReactPlayer","format","formatDistanceToNow","BsDot","AiOutlineLike","AiOutlineDislike","CgPlayListAdd","Header","SidebarSection","Context","VideoItemDetailsContainer","VideoItemDetailsRowContainer","VideoItemContainer","FailureViewContainer","FailureViewImage","FailureHeading","FailureText","FailureRetryButton","VideoItemDescription","ParametersAndLikesContainer","ParametersAndLikesInnerContainer","VideoItemDetailsText","VideoItemDetailsSmallButton","VideoItemLine","VideoItemProfileContainer","VideoItemProfileImage","VideoItemProfileDescriptionContainer","VideoProfileChannelName","VideoProfileChannelSubscribers","VideoProfileDescriptionLargeText","VideoProfileDescriptionSmallText","apiConstants","initial","success","failure","inProgress","VideoItemDetails","state","apiStatus","isLikeActive","isDislikeActive","formattedData","responseData","similar_videos","map","eachItem","channel","name","profileImageUrl","profile_image_url","id","publishedAt","published_at","thumbnailUrl","thumbnail_url","title","viewCount","view_count","getVideoItemDetailsData","setState","match","props","params","jwtToken","get","videoItemDetailsUrl","options","headers","Authorization","method","videoDetailsResponse","fetch","ok","videoDetailsData","json","formattedVideoDetailsData","video_details","subscriberCount","subscriber_count","description","videoUrl","video_url","videoDetails","renderFailureView","value","isLightThemeActive","failureImage","failureHeadingColor","failureTextColor","renderLoaderView","loaderColor","toggleLikeButton","toggleDislikeButton","renderVideoItemDetails","saveOrDeleteVideo","savedVideosList","activeButtonColor","inActiveButtonColor","videoItemBgColor","videoItemDescriptionColor","alreadySavedVideos","filter","isThisVideoSaved","length","textColor","formattedDate","Date","newDate","publishedTimeAgo","channelNameColor","channelSubscriberColor","onClickSaveOrDeleteButton","renderVideoItemView","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport Loader from 'react-loader-spinner'\r\nimport ReactPlayer from 'react-player'\r\nimport {format, formatDistanceToNow} from 'date-fns'\r\n\r\nimport {BsDot} from 'react-icons/bs'\r\nimport {AiOutlineLike, AiOutlineDislike} from 'react-icons/ai'\r\nimport {CgPlayListAdd} from 'react-icons/cg'\r\n\r\nimport Header from '../Header'\r\nimport SidebarSection from '../SidebarContainer'\r\nimport Context from '../../Context/Context'\r\n\r\nimport {\r\n  VideoItemDetailsContainer,\r\n  VideoItemDetailsRowContainer,\r\n  VideoItemContainer,\r\n  FailureViewContainer,\r\n  FailureViewImage,\r\n  FailureHeading,\r\n  FailureText,\r\n  FailureRetryButton,\r\n  VideoItemDescription,\r\n  ParametersAndLikesContainer,\r\n  ParametersAndLikesInnerContainer,\r\n  VideoItemDetailsText,\r\n  VideoItemDetailsSmallButton,\r\n  VideoItemLine,\r\n  VideoItemProfileContainer,\r\n  VideoItemProfileImage,\r\n  VideoItemProfileDescriptionContainer,\r\n  VideoProfileChannelName,\r\n  VideoProfileChannelSubscribers,\r\n  VideoProfileDescriptionLargeText,\r\n  VideoProfileDescriptionSmallText,\r\n} from './styledComponents'\r\n\r\nconst apiConstants = {\r\n  initial: 'INITIAL',\r\n  success: 'SUCCESS',\r\n  failure: 'FAILURE',\r\n  inProgress: 'IN_PROGRESS',\r\n}\r\n\r\nclass VideoItemDetails extends Component {\r\n  state = {\r\n    apiStatus: apiConstants.initial,\r\n    isLikeActive: false,\r\n    isDislikeActive: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getVideoItemDetailsData()\r\n  }\r\n\r\n  formattedData = responseData =>\r\n    responseData.similar_videos.map(eachItem => ({\r\n      channel: {\r\n        name: eachItem.channel.name,\r\n        profileImageUrl: eachItem.channel.profile_image_url,\r\n      },\r\n      id: eachItem.id,\r\n      publishedAt: eachItem.published_at,\r\n      thumbnailUrl: eachItem.thumbnail_url,\r\n      title: eachItem.title,\r\n      viewCount: eachItem.view_count,\r\n    }))\r\n\r\n  getVideoItemDetailsData = async () => {\r\n    this.setState({apiStatus: apiConstants.inProgress})\r\n    const {match} = this.props\r\n    const {params} = match\r\n    const {id} = params\r\n    const jwtToken = Cookies.get('jwt_token')\r\n    const videoItemDetailsUrl = `https://apis.ccbp.in/videos/${id}`\r\n    const options = {\r\n      headers: {\r\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU`,\r\n      },\r\n      method: 'GET',\r\n    }\r\n    const videoDetailsResponse = await fetch(videoItemDetailsUrl, options)\r\n    if (videoDetailsResponse.ok) {\r\n      const videoDetailsData = await videoDetailsResponse.json()\r\n      const formattedVideoDetailsData = {\r\n        channel: {\r\n          name: videoDetailsData.video_details.channel.name,\r\n          profileImageUrl:\r\n            videoDetailsData.video_details.channel.profile_image_url,\r\n          subscriberCount:\r\n            videoDetailsData.video_details.channel.subscriber_count,\r\n        },\r\n        id: videoDetailsData.video_details.id,\r\n        description: videoDetailsData.video_details.description,\r\n        publishedAt: videoDetailsData.video_details.published_at,\r\n        thumbnailUrl: videoDetailsData.video_details.thumbnail_url,\r\n        title: videoDetailsData.video_details.title,\r\n        viewCount: videoDetailsData.video_details.view_count,\r\n        videoUrl: videoDetailsData.video_details.video_url,\r\n      }\r\n      this.setState({\r\n        videoDetails: formattedVideoDetailsData,\r\n        apiStatus: apiConstants.success,\r\n      })\r\n    } else {\r\n      this.setState({apiStatus: apiConstants.failure})\r\n    }\r\n  }\r\n\r\n  renderFailureView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const failureImage = isLightThemeActive\r\n          ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\r\n          : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\r\n        const failureHeadingColor = isLightThemeActive ? '#00306e' : '#ebebeb'\r\n        const failureTextColor = isLightThemeActive ? '#64748b' : '#d7dfe9'\r\n        return (\r\n          <FailureViewContainer>\r\n            <FailureViewImage src={failureImage} alt=\"failure view\" />\r\n            <FailureHeading color={failureHeadingColor}>\r\n              Oops! Something Went Wrong\r\n            </FailureHeading>\r\n            <FailureText color={failureTextColor}>\r\n              We are having some trouble to complete your request. Please try\r\n              again.\r\n            </FailureText>\r\n            <FailureRetryButton\r\n              type=\"button\"\r\n              onClick={this.getVideoItemDetailsData}\r\n            >\r\n              Retry\r\n            </FailureRetryButton>\r\n          </FailureViewContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderLoaderView = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive} = value\r\n        const loaderColor = isLightThemeActive ? '#000000' : '#ffffff'\r\n        return (\r\n          <div className=\"loader-container\" data-testid=\"loader\">\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color={loaderColor}\r\n              height=\"50\"\r\n              width=\"50\"\r\n            />\r\n          </div>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  toggleLikeButton = () => {\r\n    this.setState({isLikeActive: true, isDislikeActive: false})\r\n  }\r\n\r\n  toggleDislikeButton = () => {\r\n    this.setState({isLikeActive: false, isDislikeActive: true})\r\n  }\r\n\r\n  renderVideoItemDetails = () => (\r\n    <Context.Consumer>\r\n      {value => {\r\n        const {isLightThemeActive, saveOrDeleteVideo, savedVideosList} = value\r\n        const {videoDetails, isLikeActive, isDislikeActive} = this.state\r\n        const activeButtonColor = '#2563eb'\r\n        const inActiveButtonColor = ' #64748b'\r\n        const videoItemBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f'\r\n        const videoItemDescriptionColor = isLightThemeActive\r\n          ? '#475569'\r\n          : '#cecece'\r\n        const alreadySavedVideos = savedVideosList.filter(\r\n          eachItem => eachItem.id === videoDetails.id,\r\n        )\r\n        const isThisVideoSaved = alreadySavedVideos.length !== 0\r\n\r\n        const textColor = isLightThemeActive ? '#424242' : '#cccccc'\r\n        const formattedDate = format(\r\n          new Date(videoDetails.publishedAt),\r\n          'yyyy, MM, dd',\r\n        )\r\n        const newDate = new Date(formattedDate)\r\n        const publishedTimeAgo = formatDistanceToNow(newDate)\r\n        const channelNameColor = isLightThemeActive ? '#1e293b' : '#cccccc'\r\n        const channelSubscriberColor = isLightThemeActive\r\n          ? '#475569'\r\n          : '#f1f1f1'\r\n\r\n        const onClickSaveOrDeleteButton = () => {\r\n          saveOrDeleteVideo(videoDetails)\r\n        }\r\n        return (\r\n          <VideoItemContainer\r\n            backgroundColor={videoItemBgColor}\r\n            data-testid=\"videoItemDetails\"\r\n          >\r\n            <ReactPlayer controls width=\"90%\" url={videoDetails.videoUrl} />\r\n            <VideoItemDescription color={videoItemDescriptionColor}>\r\n              {videoDetails.title}\r\n            </VideoItemDescription>\r\n            <ParametersAndLikesContainer>\r\n              <ParametersAndLikesInnerContainer>\r\n                <VideoItemDetailsText\r\n                  color={textColor}\r\n                >{`${videoDetails.viewCount} views`}</VideoItemDetailsText>\r\n                <BsDot size=\"22\" color={textColor} />\r\n                <VideoItemDetailsText color={textColor}>\r\n                  {publishedTimeAgo}\r\n                </VideoItemDetailsText>\r\n              </ParametersAndLikesInnerContainer>\r\n              <ParametersAndLikesInnerContainer>\r\n                <VideoItemDetailsSmallButton\r\n                  type=\"button\"\r\n                  onClick={this.toggleLikeButton}\r\n                  color={isLikeActive ? activeButtonColor : inActiveButtonColor}\r\n                >\r\n                  <AiOutlineLike />\r\n                  Like\r\n                </VideoItemDetailsSmallButton>\r\n                <VideoItemDetailsSmallButton\r\n                  type=\"button\"\r\n                  onClick={this.toggleDislikeButton}\r\n                  color={\r\n                    isDislikeActive ? activeButtonColor : inActiveButtonColor\r\n                  }\r\n                >\r\n                  <AiOutlineDislike />\r\n                  Dislike\r\n                </VideoItemDetailsSmallButton>\r\n                <VideoItemDetailsSmallButton\r\n                  type=\"button\"\r\n                  onClick={onClickSaveOrDeleteButton}\r\n                  color={\r\n                    isThisVideoSaved ? activeButtonColor : inActiveButtonColor\r\n                  }\r\n                >\r\n                  <CgPlayListAdd />\r\n                  {isThisVideoSaved ? 'Saved' : 'Save'}\r\n                </VideoItemDetailsSmallButton>\r\n              </ParametersAndLikesInnerContainer>\r\n            </ParametersAndLikesContainer>\r\n            <VideoItemLine color={textColor} />\r\n            <VideoItemProfileContainer>\r\n              <VideoItemProfileImage\r\n                src={videoDetails.channel.profileImageUrl}\r\n                alt=\"channel logo\"\r\n              />\r\n              <VideoItemProfileDescriptionContainer>\r\n                <VideoProfileChannelName color={channelNameColor}>\r\n                  {videoDetails.channel.name}\r\n                </VideoProfileChannelName>\r\n                <VideoProfileChannelSubscribers color={channelSubscriberColor}>\r\n                  {videoDetails.channel.subscriberCount}\r\n                </VideoProfileChannelSubscribers>\r\n                <VideoProfileDescriptionLargeText color={channelNameColor}>\r\n                  {videoDetails.description}\r\n                </VideoProfileDescriptionLargeText>\r\n              </VideoItemProfileDescriptionContainer>\r\n            </VideoItemProfileContainer>\r\n          </VideoItemContainer>\r\n        )\r\n      }}\r\n    </Context.Consumer>\r\n  )\r\n\r\n  renderVideoItemView = () => {\r\n    const {apiStatus} = this.state\r\n\r\n    switch (apiStatus) {\r\n      case apiConstants.failure:\r\n        return this.renderFailureView()\r\n      case apiConstants.inProgress:\r\n        return this.renderLoaderView()\r\n      case apiConstants.success:\r\n        return this.renderVideoItemDetails()\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const {isLightThemeActive} = value\r\n          const videoItemBgColor = isLightThemeActive ? '#f9f9f9' : '#0f0f0f'\r\n          return (\r\n            <VideoItemDetailsContainer backgroundColor={videoItemBgColor}>\r\n              <Header />\r\n              <VideoItemDetailsRowContainer>\r\n                <SidebarSection />\r\n                {this.renderVideoItemView()}\r\n              </VideoItemDetailsRowContainer>\r\n            </VideoItemDetailsContainer>\r\n          )\r\n        }}\r\n      </Context.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoItemDetails\r\n"]},"metadata":{},"sourceType":"module"}